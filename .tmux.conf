# fix tmux copy/paste per http://robots.thoughtbot.com/post/19398560514/how-to-copy-and-paste-with-tmux-on-mac-os-x
set-option -g default-command "reattach-to-user-namespace -l zsh"

# ——— Vi-key navigation -———————————————————————————————————————————————————————

# Use vi copy mode even if $EDITOR is not set to vi/vim
setw -g mode-keys vi

# Spiffy Alt+[hjkl] pane nav thanks to @nviennot!
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Nudge panes by 10, via capital HJKL
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# easier access to page-up and page-down in copy mode
bind -t vi-copy C-k page-up
bind -t vi-copy C-j page-down

# Still requires tmux -2 on older versions (I think before 1.6 or 1.7)
set -g default-terminal "screen-256color"

bind C-J swap-pane -D
bind C-K swap-pane -U

bind-key U send-keys -R


# ——— Cosmetics ————————————————————————————————————————————————————————————————

set -g status-utf8 on

set -g status-justify centre
set -g status-bg black
set -g status-right "#[fg=cyan]sess▶#S #[fg=white]user▶#(whoami) #[fg=red]host▶#H"
# TODO: Put something useful on the left
# set -g status-left-length 30
# set -g status-left ""

setw -g window-status-bell-attr default
setw -g window-status-bell-fg red
setw -g window-status-activity-attr bold
setw -g window-status-format "#[fg=cyan]#F#[fg=white]#I#[fg=cyan]≡#[fg=white]#12W"
setw -g window-status-current-format "#[fg=red]▶#[fg=white]#I#[fg=red,bold]≡#[fg=white]#W"

set -g pane-border-fg colour238
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg black

set -g message-fg white
set -g message-bg black
set -g message-attr bright

# Functions to build prompt with git branch info
function parse_git_branch {

git rev-parse --git-dir &> /dev/null
git_status="$(git status 2> /dev/null)"
branch_pattern="^# On branch ([^${IFS}]*)"
remote_pattern="# Your branch is (.*) of"
diverge_pattern="# Your branch and (.*) have diverged"
if [[ ! ${git_status} =~ "working directory clean" ]]; then
	state="${RED}⚡"
fi
# add an else if or two here if you want to get more specific
if [[ ${git_status} =~ ${remote_pattern} ]]; then
	if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
		remote="${YELLOW}↑"
	else
		remote="${YELLOW}↓"
	fi
fi
if [[ ${git_status} =~ ${diverge_pattern} ]]; then
	remote="${YELLOW}↕"
fi
if [[ ${git_status} =~ ${branch_pattern} ]]; then
	branch=${BASH_REMATCH[1]}
	echo " (${branch})${remote}${state}"
fi
}

function prompt_func() {
previous_return_value=$?;
# prompt="${TITLEBAR}$BLUE[$RED\w$GREEN$(__git_ps1)$YELLOW$(git_dirty_flag)$BLUE]$COLOR_NONE "
prompt="\w${GREEN}$(parse_git_branch)${COLOR_NONE}"
PS1="${prompt} $ "
}

PROMPT_COMMAND=prompt_func
